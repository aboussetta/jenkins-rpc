---
- name: Add ssh keys
  tags: rpc
  copy: >
    src={{item}}
    dest=~/.ssh/{{item|basename}}
  with_fileglob:
    - id_*

- name: Create /var/creds
  file:
    path: /var/creds
    state: directory

- name: Drop cloud10 openrc (for glance-swift)
  copy:
    src: /var/creds/cloud10
    dest: /var/creds/cloud10

- name: Delete RPC repo
  tags: rpc
  command:
    rm -rf ~/ansible-lxc-rpc

- name: Clone RPC repo
  tags: rpc
  git: >
    repo=https://github.com/rcbops/ansible-lxc-rpc
    dest=~/ansible-lxc-rpc

- name: Update remotes for PR ref
  tags: rpc
  command: >
    git config --add remote.origin.fetch "+refs/pull/*/head:refs/remotes/origin/pr/*"
    chdir=~/ansible-lxc-rpc

- name: Configure git identity
  tags: rpc
  shell: >
    git config --global user.email "jenkins@propter.net";
    git config --global user.name "Jenkins"
  args:
    chdir: "~/ansible-lxc-rpc"

- name: Fetch origin
  tags: rpc
  command: >
    git fetch origin
    chdir=~/ansible-lxc-rpc

- name: Checkout target branch
  tags: rpc
  command: >
    git checkout {{targetBranch}}
    chdir=~/ansible-lxc-rpc

- name: Merge PR
  tags: rpc
  command: >
    git merge --no-edit origin/pr/{{pullRequestID}}
    chdir=~/ansible-lxc-rpc

- name: Install pip
  tags: rpc
  shell: "curl https://bootstrap.pypa.io/get-pip.py|python"

- name: Install pip requirements
  tags: rpc
  pip: requirements=~/ansible-lxc-rpc/requirements.txt

- name: Install turbolift
  pip:
    name: turbolift

- name: Copy rpc_deploy directory
  tags: rpc
  command: >
    cp -a ~/ansible-lxc-rpc/etc/rpc_deploy ~/rpc_deploy
    creates=~/rpc_deploy

- name: Set environment_md5 fact for template
  tags: rpc
  stat: >
    path=~/rpc_deploy/rpc_environment.yml
  register: st

- name: Set facts for template
  tags: rpc
  set_fact:
    cluster_hosts: "{{groups[hosts]}}"
    environment_md5: "{{st.stat.md5}}"

- name: Render rpc_user_config template
  tags: rpc
  template: >
    src=rpc_user_config.yml
    dest=~/rpc_deploy/rpc_user_config.yml

- name: Generate passphrases
  tags: rpc
  command: >
    ~/ansible-lxc-rpc/scripts/pw-token-gen.py --file ~/rpc_deploy/user_variables.yml

- name: Clear glance swift container
  tags: rpc
  shell: ". /var/creds/cloud10; turbolift delete -c jenkins_cluster_{{cluster_number}}"

- name: Set glance swift backend user variables
  tags: rpc
  lineinfile:
    dest: ~/rpc_deploy/user_variables.yml
    regexp: "^{{item.key}}"
    line: "{{item.key}}: {{item.value}}"
  with_items:
    - key: glance_default_store
      value: swift

    - key: rackspace_cloud_auth_url
      value: "{{lookup('env', 'OS_AUTH_URL')}}"

    - key: rackspace_cloud_tenant_id
      value: "{{lookup('env', 'OS_TENANT_NAME')}}"

    - key: rackspace_cloud_username
      value: "{{lookup('env', 'OS_USERNAME')}}"

    - key: rackspace_cloud_password
      value: "{{lookup('env', 'OS_PASSWORD')}}"

    - key: rackspace_cloud_api_key
      value: "{{lookup('env', 'OS_API_KEY')}}"

    - key: glance_swift_store_container
      value: "jenkins_cluster_{{cluster_number}}"

    - key: glance_swift_store_endpoint_type
      value: publicURL

    - key: glance_swift_store_region
      value: "{{lookup('env', 'OS_REGION_NAME')}}"

- name: Set virt_type to kvm
  tags: rpc
  lineinfile: >
    dest=~/rpc_deploy/user_variables.yml
    regexp="^virt_type"
    line="virt_type: kvm"

- name: Copy target.sh to host[0]
  tags: rpc
  copy: >
    src=target.sh
    dest=~/target.sh
    mode=0755

- name: Dump host[0] IP to local file
  tags: rpc
  connection: local
  delegate_to: local
  copy: >
    content={{ansible_ssh_host}}
    dest=~/target.ip

- name: Drop ansible timestamp callback plugin
  tags: rpc
  copy:
    src: timestamp.py
    dest: /usr/local/lib/python2.7/dist-packages/ansible/callback_plugins/timestamp.py
