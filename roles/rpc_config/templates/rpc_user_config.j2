---
{% set infra = groups['infra'] %}
{% set network = groups['network'] %}
{% set compute = groups['compute'] %}
{% set cinder = groups['cinder'] %}
{% set logger = groups['logger'] %}

{% if groups['haproxy'] is defined %}
{% set haproxy = groups['haproxy'] %}
{% endif %}

# Cider used in the Management network
mgmt_cidr: {{ rpc_user_config.mgmt_cidr }}

# Cider used for the private vm network
tunnel_cider: {{ rpc_user_config.vxlan_cidr }}

# Cidr used for the storage network
{% if rpc_user_config.storage_cidr is defined %}
storage_cidr: {{ rpc_user_config.storage_cidr }}
{% endif %}

{% if rpc_user_config.used_ips is defined %}
used_ips:
{% for used_ip_range in rpc_user_config.used_ips %}
  - {{ used_ip_range }}
{% endfor %}
{% endif %}

# overrides anything else any where.
global_overrides:
  # Internal Management vip address
  internal_lb_vip_address: {{ rpc_user_config.internal_lb_vip_address }}

  # External DMZ VIP address
  external_lb_vip_address: {{ rpc_user_config.external_lb_vip_address }}

  # Define your neutron netowrks.
  provider_networks:
{% for network in rpc_user_config.networking %}
    - network:
      - group_binds:
{% for group_bind in network.group_binds %}
        - {{ group_bind }}
{% endfor %}
{% endfor %}
      container_bridge: "{{ network.bridge }}"
      container_interface: "{{ network.iface }}"
      type: "{{ network.type }}"
{% if network.address is defined %}
      interface_address: "{{ network.address }}"
{% endif %}
{% if network.range is defined %}
      range: "{{ network.tenant_range }}"
{% endif %}
{% if network.net_name is defined %}
      net_name: "{{ network.net_name }}"
{% endif %}
{% endfor %}

  # Name of load balancer
  lb_name: {{ rpc_user_config.lb_name }}

# User defined Infrastructure Hosts, this should be a required group
infra_hosts:
{% for host in infra %}
  infra{{ loop.index }}:
    ip: {{ host }}
{% endfor %}

# User defined Network Hosts, this should be a required group
network_hosts:
{% for host in network %}
  network{{ loop.index }}:
    ip: {{ host }}
{% endfor %}

# User defined Compute Hosts, this should be a required group
compute_hosts:
{% for host in compute %}
  compute{{ loop.index }}:
    ip: {{ host }}
{% endfor %}

# User defined Cinder Hosts, this should be a required group
cinder_hosts:
{% for host in cinder %}
  cinder{{ loop.index }}:
    ip: {{ host }}
    container_vars:
      cinder_backends:
        limit_container_type: cinder_volume
{% if 'lvm' in cinder.backend %}
        lvm:
          volume_group: {{ cinder.volume_group }}
          driver: cinder.volume.drivers.lvm.LVMISCSIDriver
          backend_name: LVM_iSCSI
{% if 'netapp' in cinder.backend %}
        netapp:
          netapp_storage_family: ontap_7mode
          netapp_storage_protocol: iscsi
          netapp_server_hostname: {{ cinder.netapp.hostname }}
          netapp_server_port: 80
          netapp_login: {{ cinder.netapp.username }}
          netapp_password: {{ cinder.netapp.password }}
          driver: cinder.volume.drivers.netapp.common.NetAppDriver
          backend_name: NETAPP_iSCSI
{% endif %}
{% endfor %}

# User defined Logger Hosts, this should be a required group
log_hosts:
{% for host in logger %}
  logger{{ loop.index }}:
    ip: {{ host }}
{% endfor %}

# User defined HAProxy Hosts
{% if haproxy is defined %}
haproxy_hosts:
{% for host in haproxy %}
  haproxy{{ loop.index }}:
    ip: {{ host }}
{% endfor %}
{% endif %}
